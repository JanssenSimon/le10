:root {
  --color-lightest: #EEE;
  --color-lightest-highlight: #E6E6E6;
  --color-light: #DDD;
  --color-light-highlight: #CCC;
  --color-grey: #808080;
  --color-darkest: #111;
  --color-darkest-highlight: #181818;
  --color-dark: #222;
  --color-dark-highlight: #333;
  --color-red: #E24;

  --color-text: var(--color-darkest);
  --color-background: var(--color-lightest);
  --color-secondary: var(--color-light);
  --color-tertiary: var(--color-lightest-highlight);
  --color-highlight: var(--color-light-highlight);

  --color-card-face: var(--color-lightest);
  --color-card-border: var(--color-dark);
  --color-card-pts: var(--color-dark);
  --color-card-black: var(--color-darkest);
  --color-card-red: var(--color-red);

  --padding-page-sides: 8rem;
  --padding-page-top: 4rem;

  --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";

  font-family: var(--font-family);
  font-size: 16px;
  line-height: 1.5;
  color: var(--color-text);
  background-color: var(--color-background);

  height: 100vh;
  padding: var(--padding-page-top) var(--padding-page-sides);
}

@media (prefers-color-scheme: dark) {
  :root {
    --color-text: var(--color-lightest);
    --color-background: var(--color-darkest);
    --color-secondary: var(--color-dark);
    --color-tertiary: var(--color-darkest-highlight);
    --color-highlight: var(--color-dark-highlight);
    --color-card-border: #FFF;
  }
}

@media (max-width: 1600px) {
  :root {
    font-size: 14px;
  }
}

header, nav, aside {
  z-index: 1;
}

aside {
  display: flex;
  gap: 1rem;
  font-size: 0.875rem;
}

aside output {
  min-width: 6.5ch;
  height: 3rem;
  padding: .5rem;
  border: 2px solid var(--color-secondary);
  border-radius: 4px;
  font-size: 1.5rem;
  line-height: 1;
  font-weight: bold;
  text-align: center;
}

.trump-color, .score {
  display: flex;
  flex-direction: column;
  gap: .25rem;
}

.bid {
  color: var(--color-grey);
}

:focus-visible {
  outline: auto;
  outline-offset: 2px;
}

h1 {
  font-size: 2rem;
  font-weight: bold;
}

h1 + p {
  margin-top: 0;
  color: var(--color-grey);
  line-height: 1;
  min-height: 1em;
}

h1>em {
  color: var(--color-red);
}

em {
  font-weight: bold;
}

a, .link {
  text-decoration: underline;
  text-decoration-color: var(--color-grey);
  cursor: pointer;
  border-radius: 2px;
  transition: .2s ease all;
}

:is(a, .link):hover {
  color: var(--color-text);
  text-decoration-color: currentColor;
}

* + p {
  margin-top: 1em;
}

button {
  cursor: pointer;
}

.colophon {
  font-size: .75rem;
  color: var(--color-grey);
}

* + .colophon {
  margin-top: 4em;
}

body {
  position: relative;
  display: grid;
  gap: 1rem;
  grid-template-columns: auto auto;
  grid-template-rows: auto 1fr;
  align-items: baseline;
  justify-items: start;
  height: 100%;
}

nav {
  display: flex;
  gap: 2rem;
  justify-self: end;
}

main {
  position: absolute;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: auto 1fr auto;
  align-items: center;
  justify-items: center;
  width: 100%;
  height: calc(100% - 5.5rem);
  align-self: end;
}

main>:nth-child(1) { grid-area: 3 / 2; }
main>:nth-child(2) {
  grid-area: 2 / 1;
  justify-self: start;
}
main>:nth-child(3) { grid-area: 1 / 2; }
main>:nth-child(4) {
  grid-area: 2 / 3;
  justify-self: end;
}

main>:nth-child(5) { grid-area: 2 / 2; }

.player {
  display: grid;
  gap: .5rem 2rem;
}

.player>h2 { grid-area: 2 / 1; }
#last-play { grid-area: 1 / 2; }

h2 {
  position: relative;
  font-size: 1.5rem;
  font-weight: bold;
}

h2::before {
  content: "";
  display: block;
  position: absolute;
  top: 50%;
  transform: translate(calc(-100% - .25rem), -50%);
  width: .5rem;
  height: .5rem;
  border-radius: 50%;
  background-color: var(--color-red);
  opacity: 0;
}

.active h2 {
  color: var(--color-red);
}

.active h2::before {
  opacity: 1;
}

.table-center>ol {
  display: grid;
  margin-top: 2em;
  grid-template-columns: auto auto auto;
  grid-template-rows: auto auto auto;
  justify-content: center;
  align-items: center;
  justify-items: center;
  gap: 0 1rem;
}

#table-state {
  font-size: 1.5rem;
  font-weight: bold;
}

.table-center>ol>:nth-child(1) {
  grid-area: 3 / 2;
  margin-top: -1.5rem;
}
.table-center>ol>:nth-child(2) { grid-area: 2 / 1; }
.table-center>ol>:nth-child(3) {
  grid-area: 1 / 2;
  margin-bottom: -1.5rem;
}
.table-center>ol>:nth-child(4) { grid-area: 2 / 3; }


.card-hand {
  display: flex;
}

.card-hand>.card {
  transition: .2s ease transform;
}

.card-hand>.card:not(.placeholder):hover {
  transform: translateY(-1rem);
}

.card-hand>.card:not(:first-child) {
  margin-left: -1rem;
}

.card-hand>.card:is(.face-down, .placeholder):not(:first-child) {
  margin-left: -2rem;
}

.card {
  position: relative;
  display: inline-block;
  width: 4rem;
  height: 6rem;
  border-radius: 4px;
  background-color: var(--color-card-face);
  background-size: 4rem;
  background-position: 50% 50%;
  border: 2px solid var(--color-card-border);
  box-shadow: 0 0 0 4px var(--color-background);
}

.card.face-down {
  background-image: url(../graphics/face-down.svg);
}

.card.placeholder {
  background-color: var(--color-secondary);
  border-color: var(--color-highlight);
}

.card.medium {
  width: 2rem;
  height: 3rem;
  background-size: 3rem;
}

.card.small {
  width: .888em;
  height: 1.333em;
  border-radius: 2px;
  vertical-align: -12.5%;
  box-shadow: none;
  border-width: 1px;
}

.card::before {
  display: inline-block;
  position: absolute;
  top: 25%;
  left: 50%;
  transform: translate(-50%, -50%);
  line-height: 0;
  font-size: 1.5rem;
  font-weight: bold;
  color: var(--color-card-black);
  font-feature-settings: "ss01" on;
}

.card.small::before {
  font-size: .666rem;
  top: 50%;
}

.card::after {
  content: "";
  display: inline-block;
  position: absolute;
  top: 66%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 2.375rem;
  height: 2.375rem;
  background-size: 100%;
  background-position: 50%;
}

.card.medium::after {
  width: 1.5rem;
  height: 1.5rem;
  top: 50%;
}

.card:is(.hearts, .diamonds)::before {
  color: var(--color-card-red);
}

.card:is(.five, .ten, .ace) {
  background-image: url(../graphics/face-points.svg);
}

.card.five::before { content: "5"; }
.card.six::before { content: "6"; }
.card.seven::before { content: "7"; }
.card.eight::before { content: "8"; }
.card.nine::before { content: "9"; }
.card.ten::before { content: "10"; }
.card.jack::before { content: "J"; }
.card.queen::before { content: "Q"; }
.card.king::before { content: "K"; }
.card.ace::before { content: "A"; }

.card.clubs::after { background-image: url(../graphics/clubs.svg); }
.card.diamonds::after { background-image: url(../graphics/diamonds.svg); }
.card.hearts::after { background-image: url(../graphics/hearts.svg); }
.card.spades::after { background-image: url(../graphics/spades.svg); }


.inert {
  pointer-events: none;
  user-select: none;
}

.inert dialog {
  pointer-events: auto;
  user-select: text;
}

dialog {
  position: absolute;
  top: 50%;
  left: 50%;
  padding: 3rem;
  min-width: 32rem;
  transform: translate(-50%, -50%);
  background-color: var(--color-secondary);
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, .25),
              0 0 0 200vw rgba(0, 0, 0, .66);
}

dialog[open] {
  display: block;
  z-index: 10;
}

dialog>.close {
  position: absolute;
  width: 2rem;
  height: 2rem;
  top: 1.5rem;
  right: 1.5rem;
  background-color: transparent;
  border-radius: 50%;
  transition: .2s ease background-color;
}

dialog>.close:hover {
  background-color: var(--color-background);
}

dialog>.close>svg {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  overflow: visible;
}

input, .button {
  background-color: var(--color-secondary);
  border-radius: 4px;
}

.button {
  user-select: none;
  transition: .2s ease filter;
}

.button.primary {
  background-color: var(--color-red);
  color: var(--color-lightest);
}

.button:not(:disabled):hover {
  filter: brightness(1.33);
}

dialog :is(input, .button) {
  background-color: var(--color-background);
}

label {
  user-select: none;
}

input {
  border: 2px solid var(--color-highlight);
}

.button {
  font-weight: bold;
  height: 2.5rem;
  padding: 0 1rem;
}

input:is([type="text"], [type="number"]) {
  height: 2.5rem;
  width: 100%;
  padding: 0 .5rem;
}

input[type="checkbox"] {
  position: relative;
  width: 1.5rem;
  height: 1.5rem;
}

input[type="checkbox"]::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: url(../graphics/check-light.svg);
  background-position: 50% 50%;
  background-size: 112.5% 112.5%;
  opacity: 0;
  transition: .2s ease opacity;
}

input[type="checkbox"]:checked::before { opacity: 1; }

@media (prefers-color-scheme: dark) {
  input[type="checkbox"]::before {
    background-image: url(../graphics/check-dark.svg);
  }
}

:disabled {
  opacity: .33;
  cursor: not-allowed;
}

.input-group {
  display: flex;
  gap: .5rem;
  align-items: center;
}

* + .input-group {
  margin-top: 1.5rem;
}

.table-select {
  display: grid;
  position: relative;
  align-content: start;
  min-width: 40em;
  height: 16rem;
  margin-top: 1.5rem;
  background-color: var(--color-background);
  border: 2px solid var(--color-highlight);
  border-radius: 8px;
  overflow: scroll;
}

.table-select>li {
  display: grid;
  grid-template-columns: minmax(max-content, auto) max-content max-content min-content;
  gap: 2rem;
  align-items: center;
  height: 3.5rem;
  padding: 0 1rem 0 2rem;
}

.table-select>li:nth-last-child(2n+1) {
  background-color: var(--color-tertiary);
}

.table-select>.no-games {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

h3 {
  font-weight: bold;
}

.table-select output:nth-of-type(2) {
  color: var(--color-grey);
}

.full output {
  color: var(--color-red);
}

.table-select .button {
  height: 2.25rem;
  padding: 0 1rem;
  background-color: var(--color-secondary);
}

dialog>footer {
  display: flex;
  justify-content: end;
  gap: 2rem;
  margin-top: 1.5rem;
}

#bid[open] {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: start;
}
